	// TODO здесь будут данные о текущем состоянии устройств. Скооннекчен/не
	// сконнекчен DevID и Bool
	private Map<Long, Boolean> devState = new HashMap<>();

	// TODO сделать данные общими. Может быть Number?
	private Map<Long, Number> currentValues = new HashMap<>();

	Map<Long, Number> readDevData(DevDto devDto) {

		int data=-1;
		
		DevDto device = devService.findDev(devDto.getId());

		String connection = "modbus:tcp://" + device.getIP() + ":" + device.getPort();
		try (PlcConnection plcConnection = new PlcDriverManager()
				.getConnection(connection) ) { //"modbus:tcp://128.65.22.51:502")) {
			// Check if this connection support reading of data.
			if (!plcConnection.getMetadata().canRead()) {
				log.error("This connection doesn't support reading.");
				return null;
			}
			//достаем из базы все данные, к данному устройству
			
			

			PlcReadRequest.Builder builder = plcConnection.readRequestBuilder();
			//достаем все данные этого устройства
			List<Value> values = new ArrayList<Value>();

			
			values=    getDevData(devDto);
			builder.addItem("value-" + 1, "40200:UINT[10]");
			// }
			PlcReadRequest readRequest = builder.build();

//////////////////////////////////////////////////////////
// Read synchronously ...
// NOTICE: the ".get()" immediately lets this thread pause until
// the response is processed and available.
			log.info("Synchronous request ...");
			PlcReadResponse syncResponse = readRequest.execute().get();
// Simply iterating over the field names returned in the response.
			data = syncResponse.getInteger("value-1");
		} catch (Exception e) {
			log.error("connEtction error");
		
		}
		DataDto dataDto = new DataDto();

		dataDto.setDataName("dataName");
		dataDto.setDataUnit("мегапаскалейТЕСТ!");
		dataDto.setId(1);
		dataDto.setValue(data);

		return dataDto;
	};

	@Override
	public boolean writeData(DataDto dataDto, DevDto devDto) {
		// TODO writeData
		return false;
	}

	@Override
	public List<DataDto> readAllData(List<DevDto> devices) {

		List<DataDto> data = new LinkedList<DataDto>();

		for (DevDto device : devices) {
			//if (device.isEnabled())
			DataDto dataDto = readData(device);
			data.add(dataDto);
		}
		return data;
	}